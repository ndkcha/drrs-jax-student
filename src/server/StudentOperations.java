
package server;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "StudentOperations", targetNamespace = "http://server/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface StudentOperations {


    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "generateStudentId", targetNamespace = "http://server/", className = "server.GenerateStudentId")
    @ResponseWrapper(localName = "generateStudentIdResponse", targetNamespace = "http://server/", className = "server.GenerateStudentIdResponse")
    @Action(input = "http://server/StudentOperations/generateStudentIdRequest", output = "http://server/StudentOperations/generateStudentIdResponse")
    public String generateStudentId();

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "lookupStudent", targetNamespace = "http://server/", className = "server.LookupStudent")
    @ResponseWrapper(localName = "lookupStudentResponse", targetNamespace = "http://server/", className = "server.LookupStudentResponse")
    @Action(input = "http://server/StudentOperations/lookupStudentRequest", output = "http://server/StudentOperations/lookupStudentResponse")
    public boolean lookupStudent(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAvailableTimeSlots", targetNamespace = "http://server/", className = "server.GetAvailableTimeSlots")
    @ResponseWrapper(localName = "getAvailableTimeSlotsResponse", targetNamespace = "http://server/", className = "server.GetAvailableTimeSlotsResponse")
    @Action(input = "http://server/StudentOperations/getAvailableTimeSlotsRequest", output = "http://server/StudentOperations/getAvailableTimeSlotsResponse")
    public String getAvailableTimeSlots(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg4
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "bookRoom", targetNamespace = "http://server/", className = "server.BookRoom")
    @ResponseWrapper(localName = "bookRoomResponse", targetNamespace = "http://server/", className = "server.BookRoomResponse")
    @Action(input = "http://server/StudentOperations/bookRoomRequest", output = "http://server/StudentOperations/bookRoomResponse")
    public String bookRoom(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        int arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        TimeSlot arg4);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg4
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "changeBooking", targetNamespace = "http://server/", className = "server.ChangeBooking")
    @ResponseWrapper(localName = "changeBookingResponse", targetNamespace = "http://server/", className = "server.ChangeBookingResponse")
    @Action(input = "http://server/StudentOperations/changeBookingRequest", output = "http://server/StudentOperations/changeBookingResponse")
    public String changeBooking(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        int arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        TimeSlot arg4);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "cancelBooking", targetNamespace = "http://server/", className = "server.CancelBooking")
    @ResponseWrapper(localName = "cancelBookingResponse", targetNamespace = "http://server/", className = "server.CancelBookingResponse")
    @Action(input = "http://server/StudentOperations/cancelBookingRequest", output = "http://server/StudentOperations/cancelBookingResponse")
    public boolean cancelBooking(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

}
